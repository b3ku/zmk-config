/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&lt {
    retro-tap;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_et {
            timeout-ms = <50>;
            key-positions = <3 5>;
            bindings = <&kp LS(N6)>;
        };
        combo_si {
            timeout-ms = <50>;
            key-positions = <8 14>;
            bindings = <&kp LS(N4)>;
        };
    };

    behaviors {
        quote: single_quote_double_quotes {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTE";
            #binding-cells = <0>;
            bindings = <&kp LS(NUHS)>, <&kp LS(N2)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma: comma_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LS(MINUS)>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        dot: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp LS(N1)>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            retro-tap;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hm_quote: homerow_mods_quote {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_QUOTE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            retro-tap;
            flavor = "balanced";
            bindings = <&kp>, <&quote>;
        };

        td_quote: td_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_QUOTE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm_quote RCTRL &none>, <&kp LS(EQUAL)>;
        };
        td_i_pipe: td_i_pipe {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_I_PIPE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp LA(N7)>;
        };
        td_a_ae: td_a_ae {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_A_AE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm LCTRL A>, <&kp COMMA>;
        };
        td_o_oe: td_o_oe {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_O_OE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp SEMICOLON>;
        };
        td_u_ue: td_u_ue {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_U_UE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp LEFT_BRACKET>;
        };
        td_s_ss: td_s_ss {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_S_SS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm LALT S>, <&kp MINUS>;
        };
        td_d_capsword: td_d_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_D_CAPSWORD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm LSHIFT D>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | |  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U   |  I  |  O  |  P  | |
            // | |  A  |  S  |  D  |  F  |  G  |        |  H  |  J   |  K  |  L  |  '  | |
            // | |  Z  |  X  |  C  |  V  |  B  |        |  N  |  M   |  ,  |  .  |  -  | |
            //               | DOWN | UP | SPC |        | RET | BSPC | DEL |
            bindings = <
                &none   &kp Q   &kp W   &kp E   &kp R   &kp T       &kp Y    &td_u_ue   &td_i_pipe   &td_o_oe   &kp P  &none
                &none   &td_a_ae   &td_s_ss   &td_d_capsword   &hm LGUI F   &kp G        &kp H    &hm RGUI J   &hm RSHIFT K   &hm RALT L   &td_quote  &none
                &none   &kp Z   &kp X   &kp C   &kp V   &kp B       &kp N    &kp M   &comma &dot    &kp SLASH  &none
                                    &lt 2 DOWN    &lt 1 UP  &hm CAPSLOCK SPACE      &hm CAPSLOCK RET  &kp BSPC    &kp DEL
            >;
        };

        fn_layer {
            // -----------------------------------------------------------------------------------------
            // | |       |      |        |      | |        | | | | | | |
            // | | LCTRL | LALT | LSHIFT | LGUI | |        | | | | | | |
            // | |       |      |        |      | |        | | | | | | |
            //                              | | | |        | ESC | LEFT | RIGHT |
            bindings = <
                &trans   &none       &none      &none        &none      &none       &none    &none   &none   &none   &none  &trans
                &trans   &kp LCTRL   &kp LALT   &kp LSHIFT   &kp LGUI   &none       &none    &none   &none   &none   &none  &trans
                &trans   &none       &none      &none        &none      &none       &none    &none   &none   &none   &none  &trans
                                                &none        &none      &none       &hm CAPSLOCK ESC    &kp LEFT   &kp DOWN
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // | |       |      |        |      | |        | | | | | | |
            // | | LCTRL | LALT | LSHIFT | LGUI | |        | | | | | | |
            // | |       |      |        |      | |        | | | | | | |
            //                              | | | |        | TAB | < | > |
            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans       &none    &none   &none   &none   &none  &trans
                &trans  &trans  &trans  &trans  &trans  &trans       &none    &none   &none   &none   &none  &trans
                &trans  &trans  &trans  &trans  &trans  &trans       &none    &none   &none   &none   &none  &trans
                                        &trans  &trans  &trans       &hm CAPSLOCK TAB    &kp GRAVE   &kp LS(GRAVE)
            >;
        };
    };
};
